CREATE TABLE APP_PROPERTY(
  NAME VARCHAR(200) NOT NULL PRIMARY KEY,
  VAL VARCHAR(200) NOT NULL,
  REGISTERED_TS TIMESTAMP NOT NULL,
  UPDATED_TS TIMESTAMP NOT NULL,
  REGISTERED_ACCOUNT VARCHAR(100) NOT NULL,
  UPDATED_ACCOUNT VARCHAR(100) NOT NULL
);

CREATE TABLE ACCOUNT(
  NAME VARCHAR(100) NOT NULL PRIMARY KEY,
  URL VARCHAR(200),
  IMAGE VARCHAR(100),
  GROUP_ACCOUNT BOOLEAN NOT NULL,
  DELETED BOOLEAN NOT NULL,
  REGISTERED_TS TIMESTAMP NOT NULL,
  UPDATED_TS TIMESTAMP NOT NULL,
  REGISTERED_ACCOUNT VARCHAR(100) NOT NULL,
  UPDATED_ACCOUNT VARCHAR(100) NOT NULL
);

CREATE TABLE USER_ACCOUNT (
  NAME VARCHAR(100) NOT NULL PRIMARY KEY,
  FULL_NAME VARCHAR(100),
  MAIL_ADDRESS VARCHAR(100) NOT NULL,
  ADMINISTRATOR BOOLEAN NOT NULL,
  PASSWORD VARCHAR(100) NOT NULL,
  PASSWORD_TYPE VARCHAR(10) NOT NULL,
  SALT CHAR(32) NOT NULL,
  LAST_LOGIN_DATE TIMESTAMP,
  REGISTERED_TS TIMESTAMP NOT NULL,
  UPDATED_TS TIMESTAMP NOT NULL,
  REGISTERED_ACCOUNT VARCHAR(100) NOT NULL,
  UPDATED_ACCOUNT VARCHAR(100) NOT NULL
);

ALTER TABLE USER_ACCOUNT ADD CONSTRAINT IDX_USER_ACCOUNT_1 UNIQUE (MAIL_ADDRESS);
ALTER TABLE USER_ACCOUNT ADD CONSTRAINT IDX_USER_ACCOUNT_FK0 FOREIGN KEY (NAME) REFERENCES ACCOUNT (NAME);

INSERT INTO ACCOUNT (
  NAME,
  GROUP_ACCOUNT,
  DELETED,
  REGISTERED_TS,
  UPDATED_TS,
  REGISTERED_ACCOUNT,
  UPDATED_ACCOUNT
) VALUES (
  'admin',
  false,
  false,
  current_timestamp,
  current_timestamp,
  'admin',
  'admin'
);

INSERT INTO USER_ACCOUNT (
  NAME,
  FULL_NAME,
  MAIL_ADDRESS,
  ADMINISTRATOR,
  PASSWORD,
  PASSWORD_TYPE,
  SALT,
  LAST_LOGIN_DATE,
  REGISTERED_TS,
  UPDATED_TS,
  REGISTERED_ACCOUNT,
  UPDATED_ACCOUNT
) VALUES (
  'admin',
  'admin',
  'root@localhost',
  true,
  'admin',
  'PLAIN',
  '00000000000000000000000000000000',
  NULL,
  current_timestamp,
  current_timestamp,
  'admin',
  'admin'
);

CREATE TABLE GROUP_MEMBER (
  GROUP_NAME VARCHAR(100) NOT NULL,
  MEMBER_NAME VARCHAR(100) NOT NULL,
  MANAGER BOOLEAN NOT NULL,
  REGISTERED_TS TIMESTAMP NOT NULL,
  UPDATED_TS TIMESTAMP NOT NULL,
  REGISTERED_ACCOUNT VARCHAR(100) NOT NULL,
  UPDATED_ACCOUNT VARCHAR(100) NOT NULL,
  PRIMARY KEY (GROUP_NAME, MEMBER_NAME)
);
ALTER TABLE GROUP_MEMBER ADD CONSTRAINT IDX_GROUP_MEMBER_FK0 FOREIGN KEY (GROUP_NAME) REFERENCES ACCOUNT (NAME);
ALTER TABLE GROUP_MEMBER ADD CONSTRAINT IDX_GROUP_MEMBER_FK1 FOREIGN KEY (MEMBER_NAME) REFERENCES ACCOUNT (NAME);

/* repository */
CREATE TABLE REPOSITORY (
  ACCOUNT_NAME VARCHAR(100) NOT NULL,
  REPOSITORY_NAME VARCHAR(100) NOT NULL,
  PRIVATE BOOLEAN NOT NULL,
  DESCRIPTION VARCHAR(200) NOT NULL,
  DEFAULT_BRANCH VARCHAR(100),
  REGISTERED_TS TIMESTAMP NOT NULL,
  UPDATED_TS TIMESTAMP NOT NULL,
  REGISTERED_ACCOUNT VARCHAR(100) NOT NULL,
  UPDATED_ACCOUNT VARCHAR(100) NOT NULL,
  PRIMARY KEY (ACCOUNT_NAME, REPOSITORY_NAME)
);
ALTER TABLE REPOSITORY ADD CONSTRAINT IDX_REPOSITORY_FK0 FOREIGN KEY (ACCOUNT_NAME) REFERENCES ACCOUNT (NAME);

CREATE TABLE COLLABORATOR (
  ACCOUNT_NAME VARCHAR(100) NOT NULL,
  REPOSITORY_NAME VARCHAR(100) NOT NULL,
  COLLABORATOR_NAME VARCHAR(100) NOT NULL,
  REGISTERED_TS TIMESTAMP NOT NULL,
  UPDATED_TS TIMESTAMP NOT NULL,
  REGISTERED_ACCOUNT VARCHAR(100) NOT NULL,
  UPDATED_ACCOUNT VARCHAR(100) NOT NULL,
  PRIMARY KEY (ACCOUNT_NAME, REPOSITORY_NAME, COLLABORATOR_NAME)
);
ALTER TABLE COLLABORATOR ADD CONSTRAINT IDX_COLLABORATOR_FK0 FOREIGN KEY (ACCOUNT_NAME, REPOSITORY_NAME) REFERENCES REPOSITORY (ACCOUNT_NAME, REPOSITORY_NAME);
ALTER TABLE COLLABORATOR ADD CONSTRAINT IDX_COLLABORATOR_FK1 FOREIGN KEY (COLLABORATOR_NAME) REFERENCES ACCOUNT (NAME);

CREATE TABLE ISSUE (
  ACCOUNT_NAME VARCHAR(100) NOT NULL,
  REPOSITORY_NAME VARCHAR(100) NOT NULL,
  ISSUE_ID BIGINT NOT NULL,
  OPENED_ACCOUNT_NAME VARCHAR(100) NOT NULL,
  ASSIGNED_ACCOUNT_NAME VARCHAR(100),
  TITLE VARCHAR(100) NOT NULL,
  CLOSED boolean NOT NULL,
  REGISTERED_TS TIMESTAMP NOT NULL,
  UPDATED_TS TIMESTAMP NOT NULL,
  REGISTERED_ACCOUNT VARCHAR(100) NOT NULL,
  UPDATED_ACCOUNT VARCHAR(100) NOT NULL,
  PRIMARY KEY (ACCOUNT_NAME, REPOSITORY_NAME, ISSUE_ID)
);
ALTER TABLE ISSUE ADD CONSTRAINT IDX_ISSUE_FK0 FOREIGN KEY (ACCOUNT_NAME, REPOSITORY_NAME) REFERENCES REPOSITORY (ACCOUNT_NAME, REPOSITORY_NAME);
ALTER TABLE ISSUE ADD CONSTRAINT IDX_ISSUE_FK1 FOREIGN KEY (OPENED_ACCOUNT_NAME) REFERENCES ACCOUNT (NAME);
ALTER TABLE ISSUE ADD CONSTRAINT IDX_ISSUE_FK2 FOREIGN KEY (ASSIGNED_ACCOUNT_NAME) REFERENCES ACCOUNT (NAME);

CREATE TABLE PULL_REQUEST (
  ACCOUNT_NAME VARCHAR(100) NOT NULL,
  REPOSITORY_NAME VARCHAR(100) NOT NULL,
  ISSUE_ID BIGINT NOT NULL,
  BASE_BRANCH_NAME VARCHAR(100) NOT NULL,
  REQUEST_ACCOUNT_NAME VARCHAR(100) NOT NULL,
  REQUEST_REPOSITORY_NAME VARCHAR(100) NOT NULL,
  REQUEST_BRANCH_NAME VARCHAR(100) NOT NULL,
  COMMIT_ID CHAR(40) NOT NULL,
  BASE_COMMIT_ID CHAR(40) NOT NULL,
  REQUEST_COMMIT_ID CHAR(40) NOT NULL,
  REGISTERED_TS TIMESTAMP NOT NULL,
  UPDATED_TS TIMESTAMP NOT NULL,
  REGISTERED_ACCOUNT VARCHAR(100) NOT NULL,
  UPDATED_ACCOUNT VARCHAR(100) NOT NULL,
  PRIMARY KEY (ACCOUNT_NAME, REPOSITORY_NAME, ISSUE_ID)
);
ALTER TABLE PULL_REQUEST ADD CONSTRAINT IDX_PULL_REQUEST_FK0 FOREIGN KEY (ACCOUNT_NAME, REPOSITORY_NAME, ISSUE_ID) REFERENCES ISSUE (ACCOUNT_NAME, REPOSITORY_NAME, ISSUE_ID);

CREATE TABLE MERGEABLE_HISTORY (
  ACCOUNT_NAME VARCHAR(100) NOT NULL,
  REPOSITORY_NAME VARCHAR(100) NOT NULL,
  COMMIT_ID CHAR(40) NOT NULL,
  REQUEST_COMMIT_ID CHAR(40) NOT NULL,
  MERGEABLE_TYPE INTEGER NOT NULL,
  REGISTERED_TS TIMESTAMP NOT NULL,
  UPDATED_TS TIMESTAMP NOT NULL,
  REGISTERED_ACCOUNT VARCHAR(100) NOT NULL,
  UPDATED_ACCOUNT VARCHAR(100) NOT NULL,
  PRIMARY KEY (ACCOUNT_NAME, REPOSITORY_NAME, COMMIT_ID, REQUEST_COMMIT_ID)
);
ALTER TABLE MERGEABLE_HISTORY ADD CONSTRAINT MERGEABLE_HISTORY_FK0 FOREIGN KEY (ACCOUNT_NAME, REPOSITORY_NAME) REFERENCES REPOSITORY (ACCOUNT_NAME, REPOSITORY_NAME);
